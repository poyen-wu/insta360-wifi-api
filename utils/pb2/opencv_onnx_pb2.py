# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: opencv-onnx.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'opencv-onnx.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11opencv-onnx.proto\x12\x0bopencv_onnx\"\x83\x04\n\x0e\x41ttributeProto\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x15\n\rref_attr_name\x18\x15 \x01(\t\x12\x12\n\ndoc_string\x18\r \x01(\t\x12\x37\n\x04type\x18\x14 \x01(\x0e\x32).opencv_onnx.AttributeProto.AttributeType\x12\t\n\x01\x66\x18\x02 \x01(\x02\x12\t\n\x01i\x18\x03 \x01(\x03\x12\t\n\x01s\x18\x04 \x01(\x0c\x12#\n\x01t\x18\x05 \x01(\x0b\x32\x18.opencv_onnx.TensorProto\x12\"\n\x01g\x18\x06 \x01(\x0b\x32\x17.opencv_onnx.GraphProto\x12\x0e\n\x06\x66loats\x18\x07 \x03(\x02\x12\x0c\n\x04ints\x18\x08 \x03(\x03\x12\x0f\n\x07strings\x18\t \x03(\x0c\x12)\n\x07tensors\x18\n \x03(\x0b\x32\x18.opencv_onnx.TensorProto\x12\'\n\x06graphs\x18\x0b \x03(\x0b\x32\x17.opencv_onnx.GraphProto\"\x91\x01\n\rAttributeType\x12\r\n\tUNDEFINED\x10\x00\x12\t\n\x05\x46LOAT\x10\x01\x12\x07\n\x03INT\x10\x02\x12\n\n\x06STRING\x10\x03\x12\n\n\x06TENSOR\x10\x04\x12\t\n\x05GRAPH\x10\x05\x12\n\n\x06\x46LOATS\x10\x06\x12\x08\n\x04INTS\x10\x07\x12\x0b\n\x07STRINGS\x10\x08\x12\x0b\n\x07TENSORS\x10\t\x12\n\n\x06GRAPHS\x10\n\"X\n\x0eValueInfoProto\x12\x0c\n\x04name\x18\x01 \x01(\t\x12$\n\x04type\x18\x02 \x01(\x0b\x32\x16.opencv_onnx.TypeProto\x12\x12\n\ndoc_string\x18\x03 \x01(\t\"\x9d\x01\n\tNodeProto\x12\r\n\x05input\x18\x01 \x03(\t\x12\x0e\n\x06output\x18\x02 \x03(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0f\n\x07op_type\x18\x04 \x01(\t\x12\x0e\n\x06\x64omain\x18\x07 \x01(\t\x12.\n\tattribute\x18\x05 \x03(\x0b\x32\x1b.opencv_onnx.AttributeProto\x12\x12\n\ndoc_string\x18\x06 \x01(\t\"\xa8\x02\n\nModelProto\x12\x12\n\nir_version\x18\x01 \x01(\x03\x12\x35\n\x0copset_import\x18\x08 \x03(\x0b\x32\x1f.opencv_onnx.OperatorSetIdProto\x12\x15\n\rproducer_name\x18\x02 \x01(\t\x12\x18\n\x10producer_version\x18\x03 \x01(\t\x12\x0e\n\x06\x64omain\x18\x04 \x01(\t\x12\x15\n\rmodel_version\x18\x05 \x01(\x03\x12\x12\n\ndoc_string\x18\x06 \x01(\t\x12&\n\x05graph\x18\x07 \x01(\x0b\x32\x17.opencv_onnx.GraphProto\x12;\n\x0emetadata_props\x18\x0e \x03(\x0b\x32#.opencv_onnx.StringStringEntryProto\"4\n\x16StringStringEntryProto\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\x8d\x02\n\nGraphProto\x12$\n\x04node\x18\x01 \x03(\x0b\x32\x16.opencv_onnx.NodeProto\x12\x0c\n\x04name\x18\x02 \x01(\t\x12-\n\x0binitializer\x18\x05 \x03(\x0b\x32\x18.opencv_onnx.TensorProto\x12\x12\n\ndoc_string\x18\n \x01(\t\x12*\n\x05input\x18\x0b \x03(\x0b\x32\x1b.opencv_onnx.ValueInfoProto\x12+\n\x06output\x18\x0c \x03(\x0b\x32\x1b.opencv_onnx.ValueInfoProto\x12/\n\nvalue_info\x18\r \x03(\x0b\x32\x1b.opencv_onnx.ValueInfoProto\"\xbd\x04\n\x0bTensorProto\x12\x0c\n\x04\x64ims\x18\x01 \x03(\x03\x12\x34\n\tdata_type\x18\x02 \x01(\x0e\x32!.opencv_onnx.TensorProto.DataType\x12\x31\n\x07segment\x18\x03 \x01(\x0b\x32 .opencv_onnx.TensorProto.Segment\x12\x16\n\nfloat_data\x18\x04 \x03(\x02\x42\x02\x10\x01\x12\x16\n\nint32_data\x18\x05 \x03(\x05\x42\x02\x10\x01\x12\x13\n\x0bstring_data\x18\x06 \x03(\x0c\x12\x16\n\nint64_data\x18\x07 \x03(\x03\x42\x02\x10\x01\x12\x0c\n\x04name\x18\x08 \x01(\t\x12\x12\n\ndoc_string\x18\x0c \x01(\t\x12\x10\n\x08raw_data\x18\t \x01(\x0c\x12\x17\n\x0b\x64ouble_data\x18\n \x03(\x01\x42\x02\x10\x01\x12\x17\n\x0buint64_data\x18\x0b \x03(\x04\x42\x02\x10\x01\x1a%\n\x07Segment\x12\r\n\x05\x62\x65gin\x18\x01 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x03\"\xcc\x01\n\x08\x44\x61taType\x12\r\n\tUNDEFINED\x10\x00\x12\t\n\x05\x46LOAT\x10\x01\x12\t\n\x05UINT8\x10\x02\x12\x08\n\x04INT8\x10\x03\x12\n\n\x06UINT16\x10\x04\x12\t\n\x05INT16\x10\x05\x12\t\n\x05INT32\x10\x06\x12\t\n\x05INT64\x10\x07\x12\n\n\x06STRING\x10\x08\x12\x08\n\x04\x42OOL\x10\t\x12\x0b\n\x07\x46LOAT16\x10\n\x12\n\n\x06\x44OUBLE\x10\x0b\x12\n\n\x06UINT32\x10\x0c\x12\n\n\x06UINT64\x10\r\x12\r\n\tCOMPLEX64\x10\x0e\x12\x0e\n\nCOMPLEX128\x10\x0f\"\x9c\x01\n\x10TensorShapeProto\x12\x34\n\x03\x64im\x18\x01 \x03(\x0b\x32\'.opencv_onnx.TensorShapeProto.Dimension\x1aR\n\tDimension\x12\x12\n\ndenotation\x18\x03 \x01(\t\x12\x13\n\tdim_value\x18\x01 \x01(\x03H\x00\x12\x13\n\tdim_param\x18\x02 \x01(\tH\x00\x42\x07\n\x05value\"\xcc\x01\n\tTypeProto\x12\x12\n\ndenotation\x18\x06 \x01(\t\x12\x34\n\x0btensor_type\x18\x01 \x01(\x0b\x32\x1d.opencv_onnx.TypeProto.TensorH\x00\x1al\n\x06Tensor\x12\x34\n\telem_type\x18\x01 \x01(\x0e\x32!.opencv_onnx.TensorProto.DataType\x12,\n\x05shape\x18\x02 \x01(\x0b\x32\x1d.opencv_onnx.TensorShapeProtoB\x07\n\x05value\"5\n\x12OperatorSetIdProto\x12\x0e\n\x06\x64omain\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\x03*c\n\x07Version\x12\x12\n\x0e_START_VERSION\x10\x00\x12\x19\n\x15IR_VERSION_2017_10_10\x10\x01\x12\x19\n\x15IR_VERSION_2017_10_30\x10\x02\x12\x0e\n\nIR_VERSION\x10\x03')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'opencv_onnx_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_TENSORPROTO'].fields_by_name['float_data']._loaded_options = None
  _globals['_TENSORPROTO'].fields_by_name['float_data']._serialized_options = b'\020\001'
  _globals['_TENSORPROTO'].fields_by_name['int32_data']._loaded_options = None
  _globals['_TENSORPROTO'].fields_by_name['int32_data']._serialized_options = b'\020\001'
  _globals['_TENSORPROTO'].fields_by_name['int64_data']._loaded_options = None
  _globals['_TENSORPROTO'].fields_by_name['int64_data']._serialized_options = b'\020\001'
  _globals['_TENSORPROTO'].fields_by_name['double_data']._loaded_options = None
  _globals['_TENSORPROTO'].fields_by_name['double_data']._serialized_options = b'\020\001'
  _globals['_TENSORPROTO'].fields_by_name['uint64_data']._loaded_options = None
  _globals['_TENSORPROTO'].fields_by_name['uint64_data']._serialized_options = b'\020\001'
  _globals['_VERSION']._serialized_start=2424
  _globals['_VERSION']._serialized_end=2523
  _globals['_ATTRIBUTEPROTO']._serialized_start=35
  _globals['_ATTRIBUTEPROTO']._serialized_end=550
  _globals['_ATTRIBUTEPROTO_ATTRIBUTETYPE']._serialized_start=405
  _globals['_ATTRIBUTEPROTO_ATTRIBUTETYPE']._serialized_end=550
  _globals['_VALUEINFOPROTO']._serialized_start=552
  _globals['_VALUEINFOPROTO']._serialized_end=640
  _globals['_NODEPROTO']._serialized_start=643
  _globals['_NODEPROTO']._serialized_end=800
  _globals['_MODELPROTO']._serialized_start=803
  _globals['_MODELPROTO']._serialized_end=1099
  _globals['_STRINGSTRINGENTRYPROTO']._serialized_start=1101
  _globals['_STRINGSTRINGENTRYPROTO']._serialized_end=1153
  _globals['_GRAPHPROTO']._serialized_start=1156
  _globals['_GRAPHPROTO']._serialized_end=1425
  _globals['_TENSORPROTO']._serialized_start=1428
  _globals['_TENSORPROTO']._serialized_end=2001
  _globals['_TENSORPROTO_SEGMENT']._serialized_start=1757
  _globals['_TENSORPROTO_SEGMENT']._serialized_end=1794
  _globals['_TENSORPROTO_DATATYPE']._serialized_start=1797
  _globals['_TENSORPROTO_DATATYPE']._serialized_end=2001
  _globals['_TENSORSHAPEPROTO']._serialized_start=2004
  _globals['_TENSORSHAPEPROTO']._serialized_end=2160
  _globals['_TENSORSHAPEPROTO_DIMENSION']._serialized_start=2078
  _globals['_TENSORSHAPEPROTO_DIMENSION']._serialized_end=2160
  _globals['_TYPEPROTO']._serialized_start=2163
  _globals['_TYPEPROTO']._serialized_end=2367
  _globals['_TYPEPROTO_TENSOR']._serialized_start=2250
  _globals['_TYPEPROTO_TENSOR']._serialized_end=2358
  _globals['_OPERATORSETIDPROTO']._serialized_start=2369
  _globals['_OPERATORSETIDPROTO']._serialized_end=2422
# @@protoc_insertion_point(module_scope)
